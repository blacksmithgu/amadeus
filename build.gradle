buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jooq:jooq-codegen:3.13.2"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'application'
    id 'nu.studer.jooq' version '4.2'
}

group 'io.meltec.amadeus'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://kotlin.bintray.com/kotlin-js-wrappers' }
}

dependencies {
    implementation "org.jooq:jooq:3.13.2"
    jooqRuntime 'org.jooq:jooq-meta-extensions:3.13.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-html-builder:$ktor_version"
    implementation "org.jetbrains:kotlin-css-jvm:1.0.0-pre.31-kotlin-1.2.41"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"
    implementation "io.ktor:ktor-metrics:$ktor_version"
    implementation "io.ktor:ktor-server-sessions:$ktor_version"
    implementation "io.ktor:ktor-websockets:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-auth-jwt:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
}

// TODO: It would be good if this jooq job only runs when the schema changes instead of always - schema generation takes
// several seconds!
jooq {
    version = '3.13.2'
    edition = 'OSS'
    generateSchemaSourceOnCompilation = true

    schemaGen(sourceSets.main) {
        generator {
            database {
                name = "org.jooq.meta.extensions.ddl.DDLDatabase"
                properties {
                    property {
                        key = 'scripts'
                        value = 'resources/schema.sql'
                    }
                    property {
                        key = 'sort'
                        value = 'semantic'
                    }
                    property {
                        key = 'unqualifiedSchema'
                        value = 'none'
                    }
                    property {
                        key = 'defaultNameCase'
                        value = 'as_is'
                    }
                }

                forcedTypes {
                    forcedType {
                        name = "LOCALDATETIME"
                        includeExpression = "\\w+_time"
                    }
                }
            }
        }
    }
}
